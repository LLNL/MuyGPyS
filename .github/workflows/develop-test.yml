# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Develop test

on:
  pull_request:
    branches: [ develop ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        impl-type: [numpy, jax, mpi]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        python -m pip install -e .[tests,hnswlib]
    - name: Install JAX
      if: matrix.impl-type == 'jax'
      run: python -m pip install jax[cpu]>=0.2.26
    - name: Install MPI
      if: matrix.impl-type == 'mpi'
      run: |
        sudo apt-get install mpich
        python -m pip install mpi4py>=3.1.3
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with absl
      if: matrix.impl-type == 'numpy'
      run: |
        python tests/data.py
        python tests/neighbors.py
        python tests/kernels.py
        python tests/gp.py
        python tests/optimize.py
        python tests/predict.py
        python tests/multivariate.py
    - name: Test JAX correctness
      if: matrix.impl-type == 'jax'
      run: python tests/jax_correctness.py
    - name: Test MPI correctness
      if: matrix.impl-type == 'mpi'
      run: mpirun -n 4 python tests/mpi_correctness.py

  build-docs:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get install pandoc
        python -m pip install --upgrade pip
        python -m pip install -e .[docs]
    - name: Build docs
      run: |
        sphinx-build -b html docs docs/_build/html/
